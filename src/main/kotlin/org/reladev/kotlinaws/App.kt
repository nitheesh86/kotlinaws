/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.reladev.kotlinaws

import io.ktor.application.Application
import io.ktor.application.call
import io.ktor.http.ContentType
import io.ktor.response.respondText
import io.ktor.routing.get
import io.ktor.routing.routing
import io.ktor.server.engine.embeddedServer
import io.ktor.server.netty.Netty
import java.io.File


fun main(args: Array<String>) {
    val port = System.getenv("PORT")?.toInt() ?: 8080
    embeddedServer(Netty, port = port, module = Application::mainModule).start(wait = true)
}

fun Application.mainModule() {
    val config = ApplicationConfig()

    routing {
        get("/") {
            call.respondText(config.HELLO_MESSAGE, contentType = ContentType.Text.Plain)
        }

        get("/version") {
            val version = File("version.txt").readText()
            call.respondText(version, contentType = ContentType.Text.Plain)
        }
    }
}

class ApplicationConfig(private val overrides: Map<String, String> = mapOf()){
    val HELLO_MESSAGE = environment("HELLO_MESSAGE", "Hello World!")

    private fun environment(name: String, default: String): String {
        val override = overrides[name]
        val value = System.getenv(name)
        return override ?: value ?: default
    }
}


